---
import Layout from '../layouts/Layout.astro';
---

<Layout title="Welcome to Astro.">
	<main>
	</main>
</Layout>
<script>
	let prevTime = performance.now() / 1000;
	let shouldScrollToBottom = false;
	let scrollOnce = false;

	const colorContainer = document.body;
	const lcg = document.getElementById("lcg");
	const ncg = document.getElementById("ncg");
	const ncl = document.getElementById("ncl");
	const tl = document.getElementById("tl");

	document.getElementById("skiptobutton")?.addEventListener("click", () => {
		shouldScrollToBottom = true;
		scrollOnce = true;
	});

	function rgbToHex(r, g, b) {
		return `#${r.toString(16).padStart(2, '0')}${g.toString(16).padStart(2, '0')}${b.toString(16).padStart(2, '0')}`;
	}

	async function copyToClipboard(text) {
		try {
			await navigator.clipboard.writeText(text);
			console.log('Text copied to clipboard');
		} catch (err) {
			console.error('Unable to copy text to clipboard', err);
		}
	}

	function formatTime(seconds) {
		const days = Math.floor(seconds / 86400);
		const hours = Math.floor((seconds % 86400) / 3600);
		const minutes = Math.floor((seconds % 3600) / 60);
		const secs = Math.floor(seconds % 60);
		return `${String(days).padStart(2, '0')}:${String(hours).padStart(2, '0')}:${String(minutes).padStart(2, '0')}:${String(secs).padStart(2, '0')}`;
	}

	function generateColors() {
		let i = 0, j = 0, k = 0, id = 0, l = 16581375;
		let avgGenTime = 0;
		let samples = 0;
		const fragment = document.createDocumentFragment();

		function loop() {
			const frameStart = performance.now();
			let batchCount = 0;

			while (i <= 255 && performance.now() - frameStart < 16) { // ~60fps budget
				const hexColor = rgbToHex(i, j, k);
				const colorBox = document.createElement('div');
				colorBox.className = 'color-box';
				colorBox.style.backgroundColor = hexColor;
				colorBox.textContent = hexColor;
				colorBox.id = String(++id);
				colorBox.addEventListener('click', () => copyToClipboard(hexColor));
				fragment.appendChild(colorBox);

				if (++k > 255) { k = 0; if (++j > 255) { j = 0; i++; } }
				l--;
				batchCount++;
			}

			if (batchCount > 0) colorContainer.appendChild(fragment);

			if (shouldScrollToBottom) {
				window.scrollTo({ top: document.body.scrollHeight });
				if (scrollOnce) { shouldScrollToBottom = false; scrollOnce = false; }
			}

			const currentTime = performance.now() / 1000;
			const frameTime = currentTime - prevTime;
			avgGenTime = (avgGenTime * samples + frameTime) / (samples + 1);
			samples++;

			const colorsLeft = l;
			const estSecondsRemaining = colorsLeft * avgGenTime * 0.5; // slightly dampened for better estimate
			if (tl) tl.textContent = formatTime(estSecondsRemaining);

			if (lcg) lcg.textContent = rgbToHex(i, j, k);
			if (ncg) ncg.textContent = String(id);
			if (ncl) ncl.textContent = String(l);

			prevTime = currentTime;

			if (i <= 255) requestAnimationFrame(loop);
		}

		loop();
	}

	generateColors();
</script>
